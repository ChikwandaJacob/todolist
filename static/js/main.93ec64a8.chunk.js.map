{"version":3,"sources":["Constants/index.js","ReduxReducer/index.js","ReduxStore/index.js","Components/Form.jsx","ReduxActions/index.js","Components/ReminderList.jsx","Components/Footer.jsx","Components/App.jsx","index.js"],"names":["ADD_REMINDER","DELETE_REMINDER","CLEAR_REMINDERS","reminder","action","text","due_date","id","Math","random","removeId","state","reminders","filter","rootReducer","read_cookie","type","bake_cookie","delete_cookie","store","createStore","ReminderForm","props","date","moment","Date","this","fromNow","addReminder","className","onSubmit","event","preventDefault","required","placeholder","onChange","setState","target","value","Component","Form","connect","dispatch","console","log","RemindersList","deleteReminder","clearReminders","length","map","key","onClick","disabled","readOnly","List","Footer","aria-hidden","getFullYear","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93ec64a8.chunk.js","sourcesContent":["export const ADD_REMINDER = 'ADD_REMINDER';\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../Constants';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\n\nfunction reminder(action) {\n    return {\n        text: action.text,\n        due_date: action.due_date,\n        id: Math.random()\n    }\n}\n\nfunction removeId(state = [], id) {\n    const reminders = state.filter(reminder => reminder.id !== id);\n    return reminders;\n}\n\nfunction rootReducer(state = [], action) {\n    let reminders = null;\n    state = read_cookie('reminders');\n    switch (action.type) {\n        case ADD_REMINDER:\n            reminders = [...state, reminder(action)];\n            bake_cookie('reminders', reminders);\n            return reminders;\n        case DELETE_REMINDER:\n            reminders = removeId(state, action.id);\n            bake_cookie('reminders', reminders);\n            return reminders;\n        case CLEAR_REMINDERS:\n            state = [];\n            delete_cookie('reminders');\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from '../ReduxReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {addReminder} from '../ReduxActions';\nimport moment from 'moment';\n\nimport '../AppStyles/App.css';\n\nfunction mapDispatchToProps(dispatch){\n    return{\n        addReminder: (reminder, date) => dispatch(addReminder(reminder, date))\n    };\n}\n\nclass ReminderForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            text : '',\n            due_date: ''\n        }\n    }\n\n    addReminder(){\n        let date = moment(new Date(this.state.due_date)).fromNow();\n        this.props.addReminder(this.state.text, date);\n    }\n\n    render(){\n        return(\n            <form \n                className=\"Reminder-Form container d-flex justify-content-center\" \n                onSubmit={event=>{\n                    event.preventDefault();\n                    this.addReminder();\n                }}>\n                <div className=\"form-group row\">\n                    <input \n                        required\n                        type=\"text\"\n                        placeholder=\"I have to...\"\n                        onChange={event=>this.setState({text: event.target.value})}\n                    />\n                    <input \n                        required\n                        type=\"date\"\n                        onChange={event=>this.setState({due_date: event.target.value})}\n                    />\n                    <input \n                        type=\"submit\" \n                        value=\"Add Reminder\"\n                        className=\"btn btn-success col-6 mx-auto Form-Button\"\n                    />\n                </div>\n                \n            </form>\n        )\n    }\n}\n\nconst Form = connect(\n    null,\n    mapDispatchToProps\n)(ReminderForm);\n\nexport default Form;\n","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../Constants';\n\nexport function addReminder(text, due_date) {\n    let action = {\n        type: ADD_REMINDER,\n        text,\n        due_date\n    }\n    console.log(action);\n    return action;\n}\n\nexport function deleteReminder(id) {\n    return {\n        type: DELETE_REMINDER,\n        id\n    }\n}\n\nexport function clearReminders() {\n    return {\n        type: CLEAR_REMINDERS\n    }\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {deleteReminder, clearReminders} from '../ReduxActions';\n\nfunction mapStateToProps(state){\n    return {\n        reminders: state\n    }\n}\n\nclass RemindersList extends Component{\n\n    deleteReminder(id){\n        this.props.deleteReminder(id);\n    }\n\n    clearReminders(){\n        this.props.clearReminders();\n    }\n\n    render(){\n        return(\n            <div className=\"Reminder\">\n                {\n                    this.props.reminders.length === 0 ? \n                        <div className=\"Todo-Title\">Your List Seems Empty</div> :\n                        <div className=\"Todo-Title\">Your Upcoming Tasks</div>\n                }\n                <ul className=\"list-group Reminder-List\">\n                    {\n                        this.props.reminders.map((reminder, key)=>{\n                            return(\n                                <li \n                                    className=\"list-group-item Reminder-Item\" \n                                    key={key}>\n                                        <div>{reminder.text}</div>\n                                        <div><em>{reminder.due_date}</em></div>\n                                    <span \n                                        className=\"Delete-Button fa fa-trash\" \n                                        type=\"button\"\n                                        onClick={()=>this.deleteReminder(reminder.id)}>\n                                    </span>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                {\n                    this.props.reminders.length === 0 ?\n                    <input\n                        type=\"Button\"\n                        value=\"Clear List\"\n                        className=\"btn btn-danger Clear-List-Button\"\n                        disabled\n                        readOnly\n                    /> :\n                    <input\n                        type=\"Button\"\n                        value=\"Clear List\"\n                        className=\"btn btn-danger Clear-List-Button\"\n                        onClick={()=>this.clearReminders()}\n                        readOnly\n                    />\n                }\n            </div>\n        )\n    }\n}\n\nconst List = connect(mapStateToProps, {deleteReminder, clearReminders})(RemindersList);\n\nexport default List;","import React, { Component } from 'react';\nimport '../AppStyles/App.css';\n\nclass Footer extends Component{\n\n    render(){\n        return(\n            <div className=\"container\">\n                <hr className=\"footer-line\"/>\n                <div className=\"row footer\">\n                    <div className=\"col-md text-center\">\n                        <div className=\"fab fa-whatsapp card-title\" aria-hidden=\"true\"></div>\n                        <p className=\"card-text\">+260 9633 60015</p>\n                    </div>\n                    <div className=\"col-md text-center\">\n                        <div className=\"fa fa-map-marker card-title\" aria-hidden=\"true\"></div>\n                        <p className=\"card-text\">Zambia</p>\n                    </div>\n                    <div className=\"col-md text-center\">\n                        <div className=\"fa fa-envelope card-title\" aria-hidden=\"true\"></div>\n                        <p className=\"card-text\">jaynjaycob@gmail.com</p>\n                    </div>\n                </div>\n                <hr className=\"footer-line\"/>\n                <div className=\"text-center author\">Jacob Chikwanda &copy; {new Date().getFullYear()}</div>\n                <hr className=\"footer-line-author\"/>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Form from './Form';\nimport List from './ReminderList';\nimport '../AppStyles/App.css';\nimport Footer from './Footer';\n\nclass App extends Component{\n\n    render(){\n        return(\n            <div className=\"App\">\n                <div className=\"App-Title\">Todo List</div>\n                <Form />\n                <List />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './ReduxStore';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}